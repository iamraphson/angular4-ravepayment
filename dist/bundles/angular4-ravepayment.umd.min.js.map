{
  "version": 3,
  "file": "angular4-ravepayment.umd.min.js",
  "sources": [
    "ng://angular4-ravepayment/out/src/app/modules/ravepayment/ravepayment.component.ts",
    "ng://angular4-ravepayment/out/src/app/modules/ravepayment/ravepayment.module.ts"
  ],
  "sourcesContent": [
    "import {Component, Input, OnInit, EventEmitter, Output} from '@angular/core';\r\n\r\ninterface IRaveOptions {\r\n    PBFPubKey: string;\r\n    txref: string;\r\n    amount: number;\r\n    currency: string;\r\n    country: string;\r\n    customer_email: string;\r\n    customer_firstname: string;\r\n    customer_lastname: string;\r\n    customer_phone: string;\r\n    custom_title: string;\r\n    custom_description: string;\r\n    custom_logo: string;\r\n    redirect_url: string;\r\n    meta ?: any;\r\n    callback: (response: object) => void;\r\n    onclose: () => void;\r\n    payment_method :string;\r\n}\r\n\r\ninterface MyWindow extends Window {\r\n    getpaidSetup: (options: IRaveOptions) => void;\r\n}\r\ndeclare let window: MyWindow\r\n\r\n@Component({\r\n  selector: 'rave-pay-button',\r\n  template: `<button ng-cloak\r\n    class=\"rave-pay-button\"\r\n    [ngStyle]=\"style\"\r\n    [ngClass]=\"className\"\r\n    (click)=\"madePayment()\"\r\n    [attr.payment_method]=\"payment_method\"\r\n    >\r\n        {{text || 'Pay'}}\r\n</button>\r\n`,\r\n  styles: [`h1{color:red}`]\r\n})\r\n\r\nexport class RavepaymentComponent implements OnInit {\r\n    @Input() text: string;\r\n    @Input() style: object;\r\n    @Input() className: string;\r\n    @Output() callback = new EventEmitter<object>();\r\n    @Output() close = new EventEmitter();\r\n    @Input() key: string;\r\n    @Input() email: string;\r\n    @Input() amount: number;\r\n    @Input() reference: string;\r\n    @Input() meta: any;\r\n    @Input() currency: string;\r\n    @Input() country: string;\r\n    @Input() customer_firstname: string;\r\n    @Input() customer_lastname: string;\r\n    @Input() customer_phone: string;\r\n    @Input() custom_title: string;\r\n    @Input() custom_description: string;\r\n    @Input() custom_logo: string;\r\n    @Input() redirect_url: string;\r\n    @Input() payment_method :string;\r\n    \r\n\r\n    private raveOptions: IRaveOptions;\r\n\r\n\r\n    constructor() {}\r\n    ngOnInit() {}\r\n\r\n    madePayment() {\r\n        this.prepRaveOptions();\r\n        window.getpaidSetup(this.raveOptions);\r\n    }\r\n\r\n    prepRaveOptions(): void {\r\n        this.raveOptions = {\r\n            PBFPubKey: this.key,\r\n            txref: this.reference,\r\n            amount: this.amount,\r\n            customer_email: this.email,\r\n            onclose: () => this.close.emit(),\r\n            callback: (response: object) => this.callback.emit(response),\r\n            currency: this.currency || 'NGN',\r\n            country: this.country || 'NG',\r\n            customer_firstname: this.customer_firstname || '',\r\n            customer_lastname: this.customer_lastname || '',\r\n            customer_phone: this.customer_phone || '',\r\n            custom_title: this.custom_title || '',\r\n            custom_description: this.custom_description || '',\r\n            custom_logo: this.custom_logo || '',\r\n            redirect_url: this.redirect_url || '',\r\n            meta: this.meta || {},\r\n            payment_method : this.payment_method  || 'card'\r\n        };\r\n    }\r\n}\r\n",
    "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {RavepaymentComponent } from './ravepayment.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n        RavepaymentComponent\r\n    ],\r\n    exports: [\r\n        RavepaymentComponent\r\n    ]\r\n})\r\n\r\nexport class RavepaymentModule { }"
  ],
  "names": [
    "RavepaymentComponent",
    "this",
    "callback",
    "EventEmitter",
    "close",
    "prototype",
    "ngOnInit",
    "madePayment",
    "prepRaveOptions",
    "window",
    "getpaidSetup",
    "raveOptions",
    "_this",
    "PBFPubKey",
    "key",
    "txref",
    "reference",
    "amount",
    "customer_email",
    "email",
    "onclose",
    "emit",
    "response",
    "currency",
    "country",
    "customer_firstname",
    "customer_lastname",
    "customer_phone",
    "custom_title",
    "custom_description",
    "custom_logo",
    "redirect_url",
    "meta",
    "payment_method",
    "type",
    "Component",
    "args",
    "selector",
    "template",
    "styles",
    "text",
    "Input",
    "style",
    "className",
    "Output",
    "RavepaymentModule",
    "NgModule",
    "imports",
    "CommonModule",
    "declarations",
    "exports"
  ],
  "mappings": "iVAAA,IAAAA,EAAA,WAoEI,SAAJA,IAtBAC,KAAAC,SAAyB,IAAIC,EAAAA,aAC7BF,KAAAG,MAAsB,IAAID,EAAAA,oBAsBtBH,EAAJK,UAAAC,SAAI,aAEAN,EAAJK,UAAAE,YAAI,WACIN,KAAKO,kBACLC,OAAOC,aAAaT,KAAKU,cAG7BX,EAAJK,UAAAG,gBAAI,WAAA,IAAJI,EAAAX,KACQA,KAAKU,YAAc,CACfE,UAAWZ,KAAKa,IAChBC,MAAOd,KAAKe,UACZC,OAAQhB,KAAKgB,OACbC,eAAgBjB,KAAKkB,MACrBC,QAAS,WAAM,OAAAR,EAAKR,MAAMiB,QAC1BnB,SAAU,SAACoB,GAAqB,OAAAV,EAAKV,SAASmB,KAAKC,IACnDC,SAAUtB,KAAKsB,UAAY,MAC3BC,QAASvB,KAAKuB,SAAW,KACzBC,mBAAoBxB,KAAKwB,oBAAsB,GAC/CC,kBAAmBzB,KAAKyB,mBAAqB,GAC7CC,eAAgB1B,KAAK0B,gBAAkB,GACvCC,aAAc3B,KAAK2B,cAAgB,GACnCC,mBAAoB5B,KAAK4B,oBAAsB,GAC/CC,YAAa7B,KAAK6B,aAAe,GACjCC,aAAc9B,KAAK8B,cAAgB,GACnCC,KAAM/B,KAAK+B,MAAQ,GACnBC,eAAiBhC,KAAKgC,gBAAmB,WA9FrD,iBA2BA,CAAAC,KAACC,EAAAA,UAADC,KAAA,CAAW,CACTC,SAAU,kBACVC,SAAU,4NAUVC,OAAQ,CAAC,6EAIXC,KAAA,CAAA,CAAAN,KAAKO,EAAAA,QACLC,MAAA,CAAA,CAAAR,KAAKO,EAAAA,QACLE,UAAA,CAAA,CAAAT,KAAKO,EAAAA,QACLvC,SAAA,CAAA,CAAAgC,KAAKU,EAAAA,SACLxC,MAAA,CAAA,CAAA8B,KAAKU,EAAAA,SACL9B,IAAA,CAAA,CAAAoB,KAAKO,EAAAA,QACLtB,MAAA,CAAA,CAAAe,KAAKO,EAAAA,QACLxB,OAAA,CAAA,CAAAiB,KAAKO,EAAAA,QACLzB,UAAA,CAAA,CAAAkB,KAAKO,EAAAA,QACLT,KAAA,CAAA,CAAAE,KAAKO,EAAAA,QACLlB,SAAA,CAAA,CAAAW,KAAKO,EAAAA,QACLjB,QAAA,CAAA,CAAAU,KAAKO,EAAAA,QACLhB,mBAAA,CAAA,CAAAS,KAAKO,EAAAA,QACLf,kBAAA,CAAA,CAAAQ,KAAKO,EAAAA,QACLd,eAAA,CAAA,CAAAO,KAAKO,EAAAA,QACLb,aAAA,CAAA,CAAAM,KAAKO,EAAAA,QACLZ,mBAAA,CAAA,CAAAK,KAAKO,EAAAA,QACLX,YAAA,CAAA,CAAAI,KAAKO,EAAAA,QACLV,aAAA,CAAA,CAAAG,KAAKO,EAAAA,QACLR,eAAA,CAAA,CAAAC,KAAKO,EAAAA,SC9DL,IAAAI,EAAA,SAAAA,oBAIA,CAAAX,KAACY,EAAAA,SAADV,KAAA,CAAU,CACNW,QAAS,CACLC,EAAAA,cAEJC,aAAc,CACVjD,GAEJkD,QAAS,CACLlD"
}

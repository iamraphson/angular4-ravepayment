{
  "version": 3,
  "file": "angular4-ravepayment.umd.min.js",
  "sources": [
    "ng://angular4-ravepayment/out/src/app/modules/ravepayment/ravepayment.component.ts",
    "ng://angular4-ravepayment/out/src/app/modules/ravepayment/ravepayment.module.ts"
  ],
  "sourcesContent": [
    "import {Component, Input, OnInit, EventEmitter, Output} from '@angular/core';\n\ninterface IRaveOptions {\n    PBFPubKey: string;\n    txref: string;\n    amount: number;\n    currency: string;\n    country: string;\n    customer_email: string;\n    customer_firstname: string;\n    customer_lastname: string;\n    customer_phone: string;\n    custom_title: string;\n    custom_description: string;\n    custom_logo: string;\n    redirect_url: string;\n    meta ?: any;\n    callback: (response: object) => void;\n    onclose: () => void;\n}\n\ninterface MyWindow extends Window {\n    getpaidSetup: (options: IRaveOptions) => void;\n}\ndeclare let window: MyWindow\n\n@Component({\n  selector: 'rave-pay-button',\n  template: `<button\n    class=\"rave-pay-button\"\n    [ngStyle]=\"style\"\n    [ngClass]=\"className\"\n    (click)=\"madePayment()\">\n        {{text || 'Pay'}}\n</button>\n`,\n  styles: [`h1{color:red}`]\n})\n\nexport class RavepaymentComponent implements OnInit {\n    @Input() text: string;\n    @Input() style: object;\n    @Input() className: string;\n    @Output() callback = new EventEmitter<object>();\n    @Output() close = new EventEmitter();\n    @Input() key: string;\n    @Input() email: string;\n    @Input() amount: number;\n    @Input() reference: string;\n    @Input() meta: any;\n    @Input() currency: string;\n    @Input() country: string;\n    @Input() customer_firstname: string;\n    @Input() customer_lastname: string;\n    @Input() customer_phone: string;\n    @Input() custom_title: string;\n    @Input() custom_description: string;\n    @Input() custom_logo: string;\n    @Input() redirect_url: string;\n    \n\n    private raveOptions: IRaveOptions;\n\n\n    constructor() {}\n    ngOnInit() {}\n\n    madePayment() {\n        this.prepRaveOptions();\n        window.getpaidSetup(this.raveOptions);\n    }\n\n    prepRaveOptions(): void {\n        this.raveOptions = {\n            PBFPubKey: this.key,\n            txref: this.reference,\n            amount: this.amount,\n            customer_email: this.email,\n            onclose: () => this.close.emit(),\n            callback: (response: object) => this.callback.emit(response),\n            currency: this.currency || 'NGN',\n            country: this.country || 'NG',\n            customer_firstname: this.customer_firstname || '',\n            customer_lastname: this.customer_lastname || '',\n            customer_phone: this.customer_phone || '',\n            custom_title: this.custom_title || '',\n            custom_description: this.custom_description || '',\n            custom_logo: this.custom_logo || '',\n            redirect_url: this.redirect_url || '',\n            meta: this.meta || {}\n        };\n    }\n}\n",
    "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {RavepaymentComponent } from './ravepayment.component';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [\n        RavepaymentComponent\n    ],\n    exports: [\n        RavepaymentComponent\n    ]\n})\n\nexport class RavepaymentModule { }"
  ],
  "names": [
    "RavepaymentComponent",
    "this",
    "callback",
    "EventEmitter",
    "close",
    "prototype",
    "ngOnInit",
    "madePayment",
    "prepRaveOptions",
    "window",
    "getpaidSetup",
    "raveOptions",
    "_this",
    "PBFPubKey",
    "key",
    "txref",
    "reference",
    "amount",
    "customer_email",
    "email",
    "onclose",
    "emit",
    "response",
    "currency",
    "country",
    "customer_firstname",
    "customer_lastname",
    "customer_phone",
    "custom_title",
    "custom_description",
    "custom_logo",
    "redirect_url",
    "meta",
    "type",
    "Component",
    "args",
    "selector",
    "template",
    "styles",
    "text",
    "Input",
    "style",
    "className",
    "Output",
    "RavepaymentModule",
    "NgModule",
    "imports",
    "CommonModule",
    "declarations",
    "exports"
  ],
  "mappings": "iVAAA,IAAAA,EAAA,WAgEI,SAAJA,IArBAC,KAAAC,SAAyB,IAAIC,EAAAA,aAC7BF,KAAAG,MAAsB,IAAID,EAAAA,oBAqBtBH,EAAJK,UAAAC,SAAI,aAEAN,EAAJK,UAAAE,YAAI,WACIN,KAAKO,kBACLC,OAAOC,aAAaT,KAAKU,cAG7BX,EAAJK,UAAAG,gBAAI,WAAA,IAAJI,EAAAX,KACQA,KAAKU,YAAc,CACfE,UAAWZ,KAAKa,IAChBC,MAAOd,KAAKe,UACZC,OAAQhB,KAAKgB,OACbC,eAAgBjB,KAAKkB,MACrBC,QAAS,WAAM,OAAAR,EAAKR,MAAMiB,QAC1BnB,SAAU,SAACoB,GAAqB,OAAAV,EAAKV,SAASmB,KAAKC,IACnDC,SAAUtB,KAAKsB,UAAY,MAC3BC,QAASvB,KAAKuB,SAAW,KACzBC,mBAAoBxB,KAAKwB,oBAAsB,GAC/CC,kBAAmBzB,KAAKyB,mBAAqB,GAC7CC,eAAgB1B,KAAK0B,gBAAkB,GACvCC,aAAc3B,KAAK2B,cAAgB,GACnCC,mBAAoB5B,KAAK4B,oBAAsB,GAC/CC,YAAa7B,KAAK6B,aAAe,GACjCC,aAAc9B,KAAK8B,cAAgB,GACnCC,KAAM/B,KAAK+B,MAAQ,OAzF/B,iBA0BA,CAAAC,KAACC,EAAAA,UAADC,KAAA,CAAW,CACTC,SAAU,kBACVC,SAAU,iKAQVC,OAAQ,CAAC,6EAIXC,KAAA,CAAA,CAAAN,KAAKO,EAAAA,QACLC,MAAA,CAAA,CAAAR,KAAKO,EAAAA,QACLE,UAAA,CAAA,CAAAT,KAAKO,EAAAA,QACLtC,SAAA,CAAA,CAAA+B,KAAKU,EAAAA,SACLvC,MAAA,CAAA,CAAA6B,KAAKU,EAAAA,SACL7B,IAAA,CAAA,CAAAmB,KAAKO,EAAAA,QACLrB,MAAA,CAAA,CAAAc,KAAKO,EAAAA,QACLvB,OAAA,CAAA,CAAAgB,KAAKO,EAAAA,QACLxB,UAAA,CAAA,CAAAiB,KAAKO,EAAAA,QACLR,KAAA,CAAA,CAAAC,KAAKO,EAAAA,QACLjB,SAAA,CAAA,CAAAU,KAAKO,EAAAA,QACLhB,QAAA,CAAA,CAAAS,KAAKO,EAAAA,QACLf,mBAAA,CAAA,CAAAQ,KAAKO,EAAAA,QACLd,kBAAA,CAAA,CAAAO,KAAKO,EAAAA,QACLb,eAAA,CAAA,CAAAM,KAAKO,EAAAA,QACLZ,aAAA,CAAA,CAAAK,KAAKO,EAAAA,QACLX,mBAAA,CAAA,CAAAI,KAAKO,EAAAA,QACLV,YAAA,CAAA,CAAAG,KAAKO,EAAAA,QACLT,aAAA,CAAA,CAAAE,KAAKO,EAAAA,SC1DL,IAAAI,EAAA,2BAIA,CAAAX,KAACY,EAAAA,SAADV,KAAA,CAAU,CACNW,QAAS,CACLC,EAAAA,cAEJC,aAAc,CACVhD,GAEJiD,QAAS,CACLjD"
}
